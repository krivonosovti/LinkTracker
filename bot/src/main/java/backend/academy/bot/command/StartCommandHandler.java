package backend.academy.bot.command;

import backend.academy.bot.exception.ApiError;
import backend.academy.bot.service.ScrapperClient;
import backend.academy.bot.service.TelegramClient;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;

@Component
public class StartCommandHandler implements CommandHandler {

    public static final String REGISTRATION_ERROR = "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ";
    private final ScrapperClient scrapperClient;
    private final TelegramClient telegramClient;

    public StartCommandHandler(ScrapperClient scrapperClient, TelegramClient telegramClient) {
        this.scrapperClient = scrapperClient;
        this.telegramClient = telegramClient;
    }

    @Override
    public String getCommand() {
        return "/start";
    }

    @Override
    public void handle(Long chatId, String messageText) {
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —á–∞—Ç –≤ Scrapper-—Å–µ—Ä–≤–∏—Å–µ
        Mono<Void> result = scrapperClient.registerChat(chatId)
            .doOnSuccess(unused -> telegramClient.sendMessage(chatId, getWelcomeMessage()))
            .doOnError(error ->  {
                if (error instanceof ApiError) {
                    telegramClient.sendMessage(chatId, REGISTRATION_ERROR + ((ApiError) error).getDescription());
                } else {
                    telegramClient.sendMessage(chatId, REGISTRATION_ERROR + error.getMessage());
                }
            })
            .then();
        result.subscribe();
    }

    private String getWelcomeMessage() {
        return """
                üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö.

                üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                /track <—Å—Å—ã–ª–∫–∞> ‚Äì –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
                /untrack <—Å—Å—ã–ª–∫–∞> ‚Äì —É–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
                /list ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Å—Å—ã–ª–∫–∏

                üîç –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É, –∏ —è –Ω–∞—á–Ω—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏!
                """;
    }

    private void sendErrorInfo(Long chatId, Throwable error, String msg) {
        if (error instanceof ApiError) {
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º ApiError, –≤—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
            ApiError apiError = (ApiError) error;
            telegramClient.sendMessage(chatId, msg + ":\n " + apiError.getDescription());
        } else {
            // –í —Å–ª—É—á–∞–µ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            telegramClient.sendMessage(chatId, msg + ": \n " + error.getMessage());
        }
    }
}
